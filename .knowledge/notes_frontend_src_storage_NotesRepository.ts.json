{"is_source_file": true, "format": "TypeScript", "description": "This file defines storage functions for loading and saving 'Note' objects using AsyncStorage in a React Native project. It provides functions to retrieve notes, seed initial data if none exist, and persist notes back to storage.", "external_files": ["@react-native-async-storage/async-storage", "../components/NoteCard"], "external_methods": ["AsyncStorage.getItem", "AsyncStorage.setItem"], "published": ["loadNotes", "saveNotes"], "classes": [], "methods": [{"name": "export async function loadNotes(): Promise<Note[]> { loadNotes", "description": "Asynchronously loads notes from AsyncStorage, returning seed data if none are found. It reads the stored data, parses it, or initializes with default notes.", "scope": "", "scopeKind": ""}, {"name": "export async function saveNotes(notes: Note[]): Promise<void> { saveNotes", "description": "Persists an array of notes to AsyncStorage by serializing the data into JSON format.", "scope": "", "scopeKind": ""}], "calls": ["AsyncStorage.getItem(KEY)", "AsyncStorage.setItem(KEY, JSON.stringify(seed))", "AsyncStorage.setItem(KEY, JSON.stringify(notes))"], "search-terms": ["NotesRepository", "AsyncStorage", "loadNotes", "saveNotes", "Note", "seed data", "React Native Storage", "Persist Notes"], "state": 2, "file_id": 13, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "KEY", "path": "/home/kavia/workspace/code-generation/simple-notes-24009-24018/notes_frontend/src/storage/NotesRepository.ts", "pattern": "/^const KEY = 'NOTES_V1';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "loadNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-24009-24018/notes_frontend/src/storage/NotesRepository.ts", "pattern": "/^export async function loadNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/simple-notes-24009-24018/notes_frontend/src/storage/NotesRepository.ts", "pattern": "/^    const raw = await AsyncStorage.getItem(KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "loadNotes", "scopeKind": "function"}, {"_type": "tag", "name": "saveNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-24009-24018/notes_frontend/src/storage/NotesRepository.ts", "pattern": "/^export async function saveNotes(notes: Note[]): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "seed", "path": "/home/kavia/workspace/code-generation/simple-notes-24009-24018/notes_frontend/src/storage/NotesRepository.ts", "pattern": "/^  const seed: Note[] = [$/", "language": "TypeScript", "kind": "constant", "scope": "loadNotes", "scopeKind": "function"}], "hash": "0fcd5c4273be893927c43621e184d46c", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/storage/NotesRepository.ts", "revision_history": [{"29": ""}]}